<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Data="clr-namespace:Neuron.Satelite.CapturaManual.Data;assembly=Neuron.CapturaManual.Data"
    xmlns:Controls="clr-namespace:Neuron.Satellite.CapturaManual.Controls" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:Toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:model="clr-namespace:Neuron.Satelite.CapturaManual.Data.Model;assembly=Neuron.CapturaManual.Data"
    mc:Ignorable="d">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Controls:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <Controls:EmptyListConverter x:Key="EmptyListConverter"/>

    <Controls:ListaAnalitosTemplateSelector x:Key="ListaAnalitosTemplateSelector"/>
    <Controls:AnaliteTemplateSelector x:Key="AnaliteTemplateSelector" />

    <DataTemplate x:Key="ExamenesTabTemplate">
        <Grid>
            <TextBlock TextWrapping="Wrap" Text="{Binding Name}" d:LayoutOverrides="Width, Height"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ExamenesButtonTemplate">
        <Grid x:Name="Gd1" Background="#1CD63030">
            <Border x:Name="Bd1" BorderBrush="#FF505050" Margin="5" Padding="5" CornerRadius="5">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="DarkGray" Offset="0"/>
                        <GradientStop Color="LightGray" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <StackPanel Orientation="Horizontal">
                    <TextBlock TextWrapping="Wrap" Text="{Binding Name}" d:LayoutOverrides="Width" FontSize="14.667" FontWeight="Bold" Margin="0,0,-0.001,0" VerticalAlignment="Center"/>
                    <TextBlock TextWrapping="Wrap" Text="{Binding Examenes.Count, StringFormat=(\{0\})}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Background" TargetName="Bd1" Value="Black"/>
                <Setter Property="TextBlock.Foreground" Value="White"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
        <StackPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <DataTemplate x:Key="ExamenesContentTemplate" DataType="{x:Type model:Seccion}">
        <Grid>
            <ListBox ItemsSource="{Binding Examenes}" HorizontalContentAlignment="Stretch" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" IsSynchronizedWithCurrentItem="True" ScrollViewer.CanContentScroll="False" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" KeyboardNavigation.TabNavigation="Continue" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="AnalitosGridView">
        <ListBox ItemsSource="{Binding}" Grid.IsSharedSizeScope="True" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemContainerStyle="{DynamicResource SinTabStopListBoxItemStyle}" KeyboardNavigation.TabNavigation="Continue" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" Style="{DynamicResource ListBoxSinScroll}" KeyboardNavigation.DirectionalNavigation="Cycle"/>
    </DataTemplate>
    <Style x:Key="SinTabStopListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFDAF7" Offset="0"/>
                    <GradientStop Color="#FF6482A3" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate DataType="{x:Type Data:PRO_CargaCapturaSeccion_Result}">
        <Controls:BusyIndicator IsBusy="{Binding IsBusy}" d:DesignWidth="300">
            <Controls:BusyIndicator.BusyContent>
                <TextBlock Text="Validando" Foreground="Black"/>
            </Controls:BusyIndicator.BusyContent>
            <Grid d:DesignWidth="600">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap" Text="{Binding NombreEstudio}" VerticalAlignment="Top" d:LayoutOverrides="Width" FontWeight="Bold" FontSize="16" Grid.ColumnSpan="1"/>
                <Button x:Name="ObsButton" Content="" Grid.Column="1" Command="{Binding TecnicianObsCommand, Mode=OneWay}" Margin="0,0,5,0" Style="{DynamicResource FolderButtonStyle}" Width="Auto" Height="27" ToolTip="Observaciones Muestra (T)"/>
                <Button Content="Opcionales..." d:LayoutOverrides="Height" Grid.Column="2" Command="{Binding OptionsCommand, Mode=OneWay}" IsEnabled="{Binding MostrarOpciones, Mode=OneWay}" Margin="0,0,15,0"/>
                <Button Content="Validar" d:LayoutOverrides="Height" Grid.Column="3" Command="{Binding ValidarCommand, Mode=OneWay}" IsEnabled="{Binding IsReady}" ContentTemplate="{DynamicResource CheckButtonTemplate}" />
                <ContentControl Grid.Column="0" Content="{Binding AnalitosView}" d:LayoutOverrides="Width, Height" Grid.Row="1" Grid.ColumnSpan="4" Margin="0,5,0,0" ContentTemplate="{DynamicResource AnalitosGridView}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="True" Panel.ZIndex="2"/>
                <!--<ListBox Grid.Row="1" ItemsSource="{Binding Analitos}" ItemContainerStyle="{DynamicResource ListBoxItemStyle2}" HorizontalContentAlignment="Stretch" Margin="0,5,0,0" Background="{x:Null}" Grid.ColumnSpan="2"/>-->
                <StackPanel Grid.Row="2" Margin="0,5,0,0" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <TextBlock Text="Observaciones:" Margin="5,0,0,2"/>
                    <TextBox TextWrapping="Wrap" Text="{Binding Observacion, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" AcceptsReturn="True" Margin="5,0,5,5" VerticalScrollBarVisibility="Disabled" MinHeight="44">
                        <TextBox.ContextMenu>
                            <ContextMenu ItemsSource="{Binding SuggestionsObservaciones}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Command" Value="{x:Static Controls:Commands.PasteCommand}" />
                                        <Setter Property="CommandParameter" Value="{Binding Texto}" />
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                                <ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Etiqueta}"/>
                                    </DataTemplate>
                                </ContextMenu.ItemTemplate>
                            </ContextMenu>
                        </TextBox.ContextMenu>
                    </TextBox>
                </StackPanel>
            </Grid>
        </Controls:BusyIndicator>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ObservaTecno}" Value="true" >
                <Setter TargetName="ObsButton" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Red" Offset="1"/>
                            <GradientStop Color="#FF6AB958"/>
                            <GradientStop Color="Red" Offset="0.98"/>
                            <GradientStop Color="#FFC2F1B8" Offset="0.95"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type Data:PRO_CargaCapturaCampoLargo_Result}">
        <Grid d:DesignWidth="600">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="Historico" Width="Auto" HorizontalAlignment="Center" d:LayoutOverrides="Height" Grid.Column="1" VerticalAlignment="Center" Command="{Binding VerHistoricoCommand, Mode=OneWay}"/>
            <TextBox TextWrapping="Wrap" Text="{Binding DatoLargo}" AcceptsReturn="True" Grid.ColumnSpan="1" Grid.RowSpan="3" MinHeight="66" MinWidth="150" HorizontalAlignment="Stretch">
                <TextBox.ContextMenu>
                    <ContextMenu ItemsSource="{Binding SuggestionsDatoLargo}">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{x:Static Controls:Commands.PasteCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding Texto}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Etiqueta}"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
            <StackPanel Orientation="Vertical" d:LayoutOverrides="Height" Grid.Column="1" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1">
                <TextBlock Margin="0" TextWrapping="Wrap" Text="Toma Evento" d:LayoutOverrides="Width" FontWeight="Bold"/>
                <TextBox TextWrapping="Wrap" IsReadOnly="True" Text="{Binding TomaEvento}"/>
            </StackPanel>
            <!--<TextBlock TextWrapping="Wrap" Text="{Binding Rotulo}" VerticalAlignment="Top" d:LayoutOverrides="Width" FontWeight="Bold" FontSize="16"/>-->
        </Grid>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="ItemsPanelTemplate2">
        <StackPanel IsItemsHost="True">
        </StackPanel>


    </ItemsPanelTemplate>

    <DataTemplate x:Key="SelectableSugestion" DataType="{x:Type model:SugerenciasAutoTexto}">
        <Grid Height="Auto" Width="Auto" Margin="2,1">
            <CheckBox Content="{Binding Etiqueta}" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding IsSelected}" Margin="0,0,5,0"/>
        </Grid>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="WrapPanelTemplate">
        <WrapPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="ContextMenuControlTemplate1" TargetType="{x:Type ContextMenu}">
        <Border Uid="Border_93" d:DataContext="{d:DesignData /SampleData/PRO_CargaCapturaCuatroCampos_ResultSampleData.xaml}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Padding" Value="0,0,5,5"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Uid="Border_50">
                <Grid MaxHeight="500" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <ScrollViewer  CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5"/>
                        </ScrollViewer>
                    </Grid>
                    <ListBox KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ItemsSource="{Binding SuggestionsMultiDatoLargo}" ItemTemplate="{DynamicResource SelectableSugestion}" Grid.Row="1" />
                    <TextBox Grid.Row="2" Text="{Binding AditionalObservations}" Margin="5,3,5,5" VerticalScrollBarVisibility="Auto" MinHeight="40" Width="175" TextWrapping="Wrap" MaxHeight="160"></TextBox>
                    <Button Grid.Row="3" Content="Aceptar" Command="{x:Static Controls:Commands.CloseMenuCommand}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,3"/>
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type Data:PRO_CargaCapturaCuatroCampos_Result}">
        <Grid x:Name="ItemRoot" d:DesignWidth="600" Margin="5" d:DataContext="{d:DesignData /SampleData/PRO_CargaCapturaCuatroCampos_ResultSampleData.xaml}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Column1" SharedSizeGroup="Columna1" Width="Auto" />
                <ColumnDefinition Width="5"/>
                <ColumnDefinition  />
                <ColumnDefinition Width="5"/>
                <ColumnDefinition SharedSizeGroup="Columna3" Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition SharedSizeGroup="Columna4" Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition SharedSizeGroup="Columna5" Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition SharedSizeGroup="Columna6" Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition SharedSizeGroup="Columna7" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="RotuloText" Orientation="Horizontal" >
                <TextBlock x:Name="RotuloTextText" TextWrapping="Wrap" Text="{Binding Rotulo}"/>
                <TextBlock x:Name="RotuloFormulaText" TextWrapping="Wrap" Text=" (calculado)" Visibility="Collapsed"/>
            </StackPanel>

            <Grid Grid.Column="2">
                <TextBox x:Name="Normal" Text="{Binding Path=Dato, ValidatesOnDataErrors=True}" TextWrapping="Wrap" MinWidth="150"  Visibility="Collapsed" HorizontalAlignment="Left" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="UP" Command="{x:Static Controls:Commands.UpNavCommand}"/>
                        <KeyBinding Key="DOWN" Command="{x:Static Controls:Commands.DownNavCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <ComboBox x:Name="ComboNormal" Text="{Binding Dato, ValidatesOnDataErrors=True}" ItemsSource="{Binding Suggestions}" MinWidth="80"  Visibility="Collapsed" HorizontalAlignment="Left" />
                <TextBox x:Name="Largo" Text="{Binding DatoLargo, ValidatesOnDataErrors=True}" TextWrapping="Wrap" MinWidth="150"  MinHeight="42" Visibility="Collapsed" AcceptsReturn="True">
                    <TextBox.ContextMenu>
                        <ContextMenu ItemsSource="{Binding SuggestionsDatoLargo}" Template="{DynamicResource ContextMenuControlTemplate1}">
                            <!---->
                            <ContextMenu.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Command" Value="{x:Static Controls:Commands.PasteCommand}" />
                                    <Setter Property="CommandParameter" Value="{Binding Texto}" />
                                </Style>
                            </ContextMenu.ItemContainerStyle>
                            <ContextMenu.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Etiqueta}"/>
                                </DataTemplate>
                            </ContextMenu.ItemTemplate>
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
                <ComboBox x:Name="DatoAutocomplete" Text="{Binding Mode=TwoWay, Path=Dato, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}" ItemsSource="{Binding Suggestions}" MinWidth="80"  Visibility="Collapsed" HorizontalAlignment="Left" IsEditable="True" StaysOpenOnEdit="True">
                </ComboBox>
                <Toolkit:AutoCompleteBox Controls:EnterKeyHelpers.EnterUpdatesTextSource="True" Name="DatoAutocomplete2" MinWidth="150" Visibility="Collapsed" Text="{Binding Mode=TwoWay, Path=Dato, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}" ItemsSource="{Binding Suggestions}" HorizontalAlignment="Left">
                    <!--<Toolkit:AutoCompleteBox.InputBindings>                        
                            <KeyBinding Key="DOWN" Command="{x:Static Controls:Commands.UpNavCommand}"/>
                            <KeyBinding Key="UP" Command="{x:Static Controls:Commands.DownNavCommand}"/>                        
                    </Toolkit:AutoCompleteBox.InputBindings>-->
                            </Toolkit:AutoCompleteBox>
                            <Controls:ValidacionDoble ValidatedValue="{Binding Path=Dato, Mode=TwoWay, ValidatesOnDataErrors=True}" x:Name="DobleValidacionControl" Visibility="Collapsed" />
            </Grid>
            <TextBlock TextWrapping="Wrap" Text="{Binding UnidadMedida}" Grid.Column="4" d:LayoutOverrides="GridBox"/>
            <Controls:ValorNormalControl x:Name="Banderitas" Grid.Column="6" Flag="{Binding Flag}" ValorNormal="{Binding ValorNormal}"/>
            <TextBlock TextWrapping="Wrap" Text="{Binding ValorNormalTexto}" Grid.Column="8" d:LayoutOverrides="GridBox"/>
            <Button x:Name="HistoricoButton" Content="Historico" Width="Auto" HorizontalAlignment="Center" d:LayoutOverrides="Height" VerticalAlignment="Center" Command="{Binding VerHistoricoCommand, Mode=OneWay}" Grid.Column="10" IsTabStop="False"/>
            <TextBlock x:Name="TomaEventoText" TextWrapping="Wrap" Text="{Binding TomaEvento}" Grid.Column="12" d:LayoutOverrides="GridBox"/>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger SourceName="Normal" Property="Validation.HasError" Value="true">
                <Setter TargetName="Normal" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger SourceName="Largo" Property="Validation.HasError" Value="true">
                <Setter TargetName="Largo" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger SourceName="DatoAutocomplete" Property="Validation.HasError" Value="true">
                <Setter TargetName="DatoAutocomplete" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger SourceName="ComboNormal" Property="Validation.HasError" Value="true">
                <Setter TargetName="ComboNormal" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger SourceName="DobleValidacionControl" Property="Validation.HasError" Value="true">
                <Setter TargetName="DobleValidacionControl" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Restrictivo}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ComboNormal" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding DobleValida}" Value="false"/>
                    <Condition Binding="{Binding Suggestions, Converter={StaticResource EmptyListConverter}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <!--<Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Collapsed"/>-->
                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding DobleValida}" Value="false"/>
                    <Condition Binding="{Binding Suggestions, Converter={StaticResource EmptyListConverter}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding DobleValida}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RotuloTipo}" Value="DATOLARGO">
                <Setter TargetName="Largo" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RotuloTipo}" Value="DATO LARGO">
                <Setter TargetName="Largo" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding EsColumna}" Value="True">
                <Setter TargetName="Column1" Property="Width" Value="80"/>
                <Setter TargetName="Normal" Property="MinWidth" Value="40"/>
                <Setter TargetName="DatoAutocomplete" Property="MinWidth" Value="40"/>
                <Setter TargetName="Normal" Property="MaxWidth" Value="150"/>
                <Setter TargetName="DatoAutocomplete" Property="MaxWidth" Value="150"/>
                <Setter TargetName="Normal" Property="HorizontalAlignment" Value="Stretch"/>
                <Setter TargetName="DatoAutocomplete" Property="HorizontalAlignment" Value="Stretch"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FieldType}" Value="{x:Static model:DataCaptureType.Optional}">
                <Setter TargetName="ItemRoot" Property="Background" Value="Red"/>

            </DataTrigger>
            <DataTrigger Binding="{Binding FieldType}" Value="{x:Static model:DataCaptureType.Subtitle}">
                <Setter TargetName="RotuloText" Property="Grid.ColumnSpan" Value="10"/>
                <Setter TargetName="RotuloTextText" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="HistoricoButton" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding RotuloTipo}" Value="SUBTITULO">
                <Setter TargetName="RotuloText" Property="Grid.ColumnSpan" Value="10"/>
                <Setter TargetName="RotuloTextText" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="HistoricoButton" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>-->
            <DataTrigger Binding="{Binding RotuloTipo}" Value="COMENTARIO">
                <Setter TargetName="RotuloText" Property="Grid.ColumnSpan" Value="10"/>
                <Setter TargetName="HistoricoButton" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RotuloTipo}" Value="FORMULA">
                <Setter TargetName="RotuloFormulaText" Property="Foreground" Value="Crimson"/>
                <Setter TargetName="RotuloFormulaText" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="RotuloFormulaText" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Normal" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="Normal" Property="Foreground" Value="Black"/>
                <Setter TargetName="Normal" Property="IsEnabled" Value="False"/>
                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="OptionalSelector" DataType="{x:Type Data:PRO_CargaCapturaCuatroCampos_Result}">
        <Grid x:Name="ItemRoot" d:DesignWidth="600" Margin="5" d:DataContext="{d:DesignData /SampleData/PRO_CargaCapturaCuatroCampos_ResultSampleData.xaml}">

            <CheckBox   x:Name="RotuloTextText" Content="{Binding Rotulo}" IsChecked="{Binding SelectedToShow}"/>

        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:Panel}">
        <Grid x:Name="ItemRoot" d:DesignWidth="600" Margin="5">
            <CheckBox   x:Name="RotuloTextText" Content="{Binding Label}" IsChecked="{Binding Selected}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type Data:DatosEnColumnas}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Margin="5" x:Name="GridColumna0">
                <ContentControl Content="{Binding Columna0}" IsTabStop="False"/>
            </Grid>
            <Grid Grid.Column="1" Margin="2,0" Background="#CA000000"  ></Grid>
            <!--Columna1-->
            <Grid d:DesignWidth="600" Margin="5" Grid.Column="2" x:Name="GridColumna1" >
                <ContentControl Content="{Binding Columna1}" IsTabStop="False"/>
                <!--<TextBlock TextWrapping="Wrap" Text="{Binding Flag}" Grid.Column="6" d:LayoutOverrides="GridBox"/>-->
            </Grid>

        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Columna1}" Value="{x:Null}">
                <Setter TargetName="GridColumna1" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna0}" Value="{x:Null}">
                <Setter TargetName="GridColumna0" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="copiacolumnas">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid d:DesignWidth="600" Margin="5" x:Name="GridColumna0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Columna1" Width="Auto" MaxWidth="75" />
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition  />
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna3" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna4" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna5" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna6" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna7" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="RotuloText" TextWrapping="Wrap" Text="{Binding Columna0.Rotulo}"/>
                <Grid Grid.Column="2">
                    <TextBox x:Name="Normal" Text="{Binding Columna0.Dato}" TextWrapping="Wrap" MinWidth="150"  Visibility="Collapsed" HorizontalAlignment="Left" />
                    <ComboBox x:Name="ComboNormal" Text="{Binding Columna0.Dato}" ItemsSource="{Binding Columna0.Suggestions}" MinWidth="80"  Visibility="Collapsed" HorizontalAlignment="Left" />
                    <TextBox x:Name="Largo" Text="{Binding Columna0.DatoLargo}" TextWrapping="Wrap" MinWidth="150"  MinHeight="42" Visibility="Collapsed" AcceptsReturn="True"  />
                    <Toolkit:AutoCompleteBox Controls:EnterKeyHelpers.EnterUpdatesTextSource="True" Name="DatoAutocomplete" MinWidth="150" Visibility="Collapsed" Text="{Binding Mode=TwoWay, Path=Columna0.Dato, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding Columna0.Suggestions}" HorizontalAlignment="Left" />
                    <Controls:ValidacionDoble ValidatedValue="{Binding Path=Columna0.Dato, Mode=TwoWay}" x:Name="DobleValidacionControl" Visibility="Collapsed" />
                </Grid>
                <TextBlock TextWrapping="Wrap" Text="{Binding Columna0.UnidadMedida}" Grid.Column="4" d:LayoutOverrides="GridBox"/>
                <Controls:ValorNormalControl x:Name="Banderitas" Grid.Column="6" Flag="{Binding Columna0.Flag}" ValorNormal="{Binding Columna0.ValorNormal}"/>
                <!--<TextBlock TextWrapping="Wrap" Text="{Binding Flag}" Grid.Column="6" d:LayoutOverrides="GridBox"/>-->
                <TextBlock TextWrapping="Wrap" Text="{Binding Columna0.ValorNormalTexto}" Grid.Column="8" d:LayoutOverrides="GridBox"/>
                <Button x:Name="HistoricoButton" Content="Historico" Width="Auto" HorizontalAlignment="Center" d:LayoutOverrides="Height" VerticalAlignment="Center" Command="{Binding Columna0.VerHistoricoCommand, Mode=OneWay}" Grid.Column="10"/>
                <TextBlock x:Name="TomaEventoText" TextWrapping="Wrap" Text="{Binding Columna0.TomaEvento}" Grid.Column="12" d:LayoutOverrides="GridBox"/>
            </Grid>
            <Grid Grid.Column="1" Margin="2,0" Background="#CA000000"  ></Grid>
            <!--Columna1-->
            <Grid d:DesignWidth="600" Margin="5" Grid.Column="2" x:Name="GridColumna1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Columna11" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition  />
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna13" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna14" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna15" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna16" Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition SharedSizeGroup="Columna17" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="RotuloText1" TextWrapping="Wrap" Text="{Binding Columna1.Rotulo}"/>
                <Grid Grid.Column="2">
                    <TextBox x:Name="Normal1" Text="{Binding Columna1.Dato}" TextWrapping="Wrap" MinWidth="150"  Visibility="Collapsed" HorizontalAlignment="Left" />
                    <ComboBox x:Name="ComboNormal1" Text="{Binding Columna1.Dato}" ItemsSource="{Binding Columna1.Suggestions}" MinWidth="80"  Visibility="Collapsed" HorizontalAlignment="Left" />
                    <TextBox x:Name="Largo1" Text="{Binding Columna1.DatoLargo}" TextWrapping="Wrap" MinWidth="150"  MinHeight="42" Visibility="Collapsed" AcceptsReturn="True"  />
                    <Toolkit:AutoCompleteBox Controls:EnterKeyHelpers.EnterUpdatesTextSource="True" Name="DatoAutocomplete1" MinWidth="150" Visibility="Collapsed" Text="{Binding Mode=TwoWay, Path=Columna1.Dato, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding Columna1.Suggestions}" HorizontalAlignment="Left" />
                    <Controls:ValidacionDoble ValidatedValue="{Binding Path=Columna1.Dato, Mode=TwoWay}" x:Name="DobleValidacionControl1" Visibility="Collapsed" />
                </Grid>
                <TextBlock TextWrapping="Wrap" Text="{Binding Columna1.UnidadMedida}" Grid.Column="4" d:LayoutOverrides="GridBox"/>
                <Controls:ValorNormalControl x:Name="Banderitas1" Grid.Column="6" Flag="{Binding Columna1.Flag}" ValorNormal="{Binding Columna1.ValorNormal}"/>
                <!--<TextBlock TextWrapping="Wrap" Text="{Binding Flag}" Grid.Column="6" d:LayoutOverrides="GridBox"/>-->
                <TextBlock TextWrapping="Wrap" Text="{Binding Columna1.ValorNormalTexto}" Grid.Column="8" d:LayoutOverrides="GridBox"/>
                <Button x:Name="HistoricoButton1" Content="Historico" Width="Auto" HorizontalAlignment="Center" d:LayoutOverrides="Height" VerticalAlignment="Center" Command="{Binding Columna1.VerHistoricoCommand, Mode=OneWay}" Grid.Column="10"/>
                <TextBlock x:Name="TomaEventoText1" TextWrapping="Wrap" Text="{Binding Columna1.TomaEvento}" Grid.Column="12" d:LayoutOverrides="GridBox"/>
            </Grid>

        </Grid>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Columna0.RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Columna0.Restrictivo}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <!--<Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>-->
                <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
                <Setter TargetName="ComboNormal" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Columna0.RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Columna0.Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding Columna0.DobleValida}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <!--<Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>-->
                <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
                <Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Columna0.RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Columna0.Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding Columna0.DobleValida}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <!--<Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>-->
                <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
                <Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Visible"/>-->
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Columna0.RotuloTipo}" Value="DATOLARGO">
                <Setter TargetName="Largo" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna0.RotuloTipo}" Value="DATO LARGO">
                <Setter TargetName="Largo" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna0.RotuloTipo}" Value="SUBTITULO">
                <Setter TargetName="RotuloText" Property="Grid.ColumnSpan" Value="4"/>
                <Setter TargetName="RotuloText" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="HistoricoButton" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna0.RotuloTipo}" Value="COMENTARIO">
                <Setter TargetName="RotuloText" Property="Grid.ColumnSpan" Value="4"/>
                <Setter TargetName="HistoricoButton" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <!--Columna1-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Columna1.RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Columna1.Restrictivo}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ComboNormal1" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Columna1.RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Columna1.Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding Columna1.DobleValida}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DatoAutocomplete1" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Columna1.RotuloTipo}" Value="DATO"/>
                    <Condition Binding="{Binding Columna1.Restrictivo}" Value="false"/>
                    <Condition Binding="{Binding Columna1.DobleValida}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DobleValidacionControl1" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Columna1.RotuloTipo}" Value="DATOLARGO">
                <Setter TargetName="Largo1" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna1.RotuloTipo}" Value="DATO LARGO">
                <Setter TargetName="Largo1" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna1.RotuloTipo}" Value="SUBTITULO">
                <Setter TargetName="RotuloText1" Property="Grid.ColumnSpan" Value="4"/>
                <Setter TargetName="RotuloText1" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="HistoricoButton1" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText1" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas1" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna1.RotuloTipo}" Value="COMENTARIO">
                <Setter TargetName="RotuloText1" Property="Grid.ColumnSpan" Value="10"/>
                <Setter TargetName="HistoricoButton1" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TomaEventoText1" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Banderitas1" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna1}" Value="{x:Null}">
                <Setter TargetName="GridColumna1" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Columna0}" Value="{x:Null}">
                <Setter TargetName="GridColumna0" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="5" Margin="5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
    </Style>
    <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="8,0,8,8"/>
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>
    <DataTemplate x:Key="CheckButtonTemplate">
        <StackPanel Orientation="Horizontal" ToolTip="Validar...">
            <Image HorizontalAlignment="Left" Height="Auto" Stretch="Uniform" VerticalAlignment="Center" Width="16" Source="Resources/Tick_Green.ico"/>
            <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Margin="5,0"><Run Language="es-co" Text="Validar"/></TextBlock>
        </StackPanel>
    </DataTemplate>
    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <DockPanel>
                        <RepeatButton Content="&lt;" Width="20" Command="{x:Static ScrollBar.LineLeftCommand}"       
                      CommandTarget="{Binding ElementName=scroll}"/>
                        <RepeatButton Content="&gt;" Width="20" DockPanel.Dock="Right" Command="{x:Static ScrollBar.LineRightCommand}"       
                      CommandTarget="{Binding ElementName=scroll}" />
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="scroll" Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="AnalitosLista">
        <ListBox Grid.Row="1" ItemsSource="{Binding}" ItemContainerStyle="{DynamicResource ListBoxItemStyle2}" HorizontalContentAlignment="Stretch" Margin="0,5,0,0" Background="{x:Null}"/>
    </DataTemplate>
    <DataTemplate x:Key="TextBlockTemplate">
        <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
    </DataTemplate>
    <Style x:Key="HeaderCollapsedStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <DataTemplate x:Key="AnalitosGrid">
        <ListView IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding}" KeyboardNavigation.TabNavigation="Continue" ItemContainerStyle="{DynamicResource ListViewItemStyle1}" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto">
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource HeaderCollapsedStyle}">
                    <GridViewColumn CellTemplate="{DynamicResource TextBlockTemplate}" DisplayMemberBinding="{Binding Rotulo}" />
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBox x:Name="Normal" Text="{Binding Dato}" TextWrapping="Wrap" MinWidth="150"  Visibility="Collapsed" />
                                    <ComboBox x:Name="ComboNormal" Text="{Binding Dato}" ItemsSource="{Binding Suggestions}" MinWidth="80"  Visibility="Collapsed" />
                                    <TextBox x:Name="Largo" Text="{Binding DatoLargo}" TextWrapping="Wrap" MinWidth="150" MaxWidth="450" MinHeight="42" Visibility="Collapsed" AcceptsReturn="True"  />
                                    <Toolkit:AutoCompleteBox Name="DatoAutocomplete" MinWidth="150" Visibility="Collapsed" Text="{Binding Mode=TwoWay, Path=Dato, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding Suggestions}" />
                                    <Controls:ValidacionDoble ValidatedValue="{Binding Path=Dato, Mode=TwoWay}" x:Name="DobleValidacionControl" Visibility="Collapsed" />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                                            <Condition Binding="{Binding Restrictivo}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <!--<Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>-->
                                        <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
                                        <Setter TargetName="ComboNormal" Property="Visibility" Value="Visible"/>
                                        <!--<Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>-->
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                                            <Condition Binding="{Binding Restrictivo}" Value="false"/>
                                            <Condition Binding="{Binding DobleValida}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <!--<Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>-->
                                        <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
                                        <Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Visible"/>
                                        <!--<Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>-->
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RotuloTipo}" Value="DATO"/>
                                            <Condition Binding="{Binding Restrictivo}" Value="false"/>
                                            <Condition Binding="{Binding DobleValida}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <!--<Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>-->
                                        <!--<Setter TargetName="Normal" Property="Visibility" Value="Visible"/>-->
                                        <Setter TargetName="DobleValidacionControl" Property="Visibility" Value="Visible"/>
                                        <!--<Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Visible"/>-->
                                    </MultiDataTrigger>
                                    <!--<DataTrigger Binding="{Binding RotuloTipo}" Value="DATO">
                                        <Setter TargetName="Largo" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="DatoAutocomplete" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>-->
                                    <DataTrigger Binding="{Binding RotuloTipo}" Value="DATOLARGO">
                                        <Setter TargetName="Largo" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RotuloTipo}" Value="DATO LARGO">
                                        <Setter TargetName="Largo" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn CellTemplate="{DynamicResource TextBlockTemplate}" DisplayMemberBinding="{Binding UnidadMedida}"/>
                    <GridViewColumn CellTemplate="{DynamicResource TextBlockTemplate}" DisplayMemberBinding="{Binding ValorNormalTexto}"/>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate >
                                <Button Content="Historico" Width="Auto" HorizontalAlignment="Center" d:LayoutOverrides="Height" VerticalAlignment="Center" Command="{Binding VerHistoricoCommand, Mode=OneWay}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn CellTemplate="{DynamicResource TextBlockTemplate}" DisplayMemberBinding="{Binding TomaEvento}" />
                </GridView>
            </ListView.View>
        </ListView>
    </DataTemplate>
    <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

        <Setter Property="IsTabStop" Value="False"/>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Style x:Key="ValidationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
                        <StackPanel Orientation="Horizontal" ToolTip="Validar...">
                            <Image HorizontalAlignment="Left" Height="Auto" Stretch="Uniform" VerticalAlignment="Center" Width="16" Source="Resources/Tick_Green.ico"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>

                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="ExamenPorIdMuestraItemTemplate">
        <Grid >
            <!--d:DataContext="{d:DesignInstance Data:PRO_ConsultaEstudioIdenMuestra_Result }"-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Margin="5,5,10,10" BorderThickness="1" BorderBrush="#FF504F4F" Padding="5" CornerRadius="3" Background="White" Grid.ColumnSpan="1">
                <Border.Effect>
                    <DropShadowEffect/>
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="16"/>
                    </Grid.ColumnDefinitions>
                    <Image Source="Resources/Tick_Green.ico" Stretch="Uniform" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding NoResultado, Converter={StaticResource NullToVisibilityConverter}}" Grid.Column="1"/>
                    <Image Source="Resources/Pencil.png" Stretch="Uniform" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding NoResultado, ConverterParameter=w, Converter={StaticResource NullToVisibilityConverter}}" Grid.Column="1"/>
                    <TextBlock TextWrapping="Wrap" Text="{Binding NomEstudio}" d:LayoutOverrides="Width" Grid.ColumnSpan="1" Grid.Column="0" VerticalAlignment="Center" Foreground="Black"/>
                </Grid>
            </Border>
            <Image Margin="0,0,6,0" x:Name="AnulaResultIco" HorizontalAlignment="Center" Source="Resources/error.png" Stretch="Uniform" VerticalAlignment="Center" Width="24" Grid.Column="1" ToolTip="Anular este Resultado." Visibility="{Binding AnularVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Image.Effect>
                    <DropShadowEffect/>
                </Image.Effect>
                <Image.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{x:Static Controls:Commands.AnulaCommand}"></MouseBinding>
                </Image.InputBindings>
            </Image>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ResultadosContentTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock TextWrapping="Wrap" Text="{Binding NomEstudio}" d:LayoutOverrides="Width, Height" Margin="5" FontWeight="Bold" FontSize="13.333" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock TextWrapping="Wrap" Text="{Binding NoResultado, StringFormat=No. de Resultado: \{0\}}" d:LayoutOverrides="Width, Height" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <TextBlock TextWrapping="Wrap" Text="{Binding CodigoFuente, StringFormat=Código Fuente: \{0\}}" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <ListBox x:Name="ListaResultados" ItemTemplate="{DynamicResource ResultadoItemTemplate}" ItemsSource="{Binding Resultados}" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.RowSpan="1" Grid.Row="3" ItemContainerStyle="{DynamicResource ResultadoItemStyle}"/>
            <TextBlock x:Name="NoResultsLabel"  TextWrapping="Wrap" Text="No Hay Resultados Disponibles." d:LayoutOverrides="Width, Height" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="3"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Resultados.Count}" Value="0">
                <Setter TargetName="ListaResultados" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="NoResultsLabel" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="ResultadoItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="5" TextWrapping="Wrap" Text="{Binding Rotulo}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center"/>
            <TextBlock Margin="5" TextWrapping="Wrap" Text="{Binding Dato}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" Grid.Column="1"/>
            <TextBlock Margin="5" TextWrapping="Wrap" Text="{Binding Medida}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" Grid.Column="2"/>
        </Grid>
    </DataTemplate>
    <Style x:Key="ResultadoItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#599C6C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxSinScroll" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Menu" TargetType="{x:Type MenuItem}">
        <Setter Property="Template" Value="{DynamicResource MenuItemControlTemplate1}"/>
        <Setter Property="ItemsPanel" Value="{DynamicResource ItemsPanelTemplate2}"/>
        <Setter Property="HeaderTemplate" Value="{DynamicResource DataTemplate1}"/>
    </Style>
    <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="{DynamicResource ŧ}" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="9"/>
                </Border>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="#FF212121" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="RightArrow" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="DataTemplate1">
        <Grid>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top"/>
        </Grid>
    </DataTemplate>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FolderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Padding="3">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Image x:Name="baseImage" HorizontalAlignment="Left" Source="Resources/FolderClose.png" Stretch="Fill"/>
                            <Image x:Name="overImage" HorizontalAlignment="Left" Source="Resources/FolderOpen.png" Stretch="Fill" Visibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter Property="Visibility" TargetName="baseImage" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="overImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>